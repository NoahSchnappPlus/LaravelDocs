控制器介绍（什么是控制器、文件位置、如何创建）
============================================

控制器概述
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
截至目前，我们所定义的路由都是基于闭包实现的，然而随着处理内容增加，以闭包形式定义的所有的请求处理逻辑显得不切实际。
为了解决这种情况，可以利用 **控制器** 来将相关的请求处理逻辑组成一个单独的类，通过控制器来定义路由。

MVC架构中控制器（Controller）负责组织路由和业务逻辑（当然，对于更加复杂的业务逻辑还会引入 Service 层），学习完本章内容或许能更好的了解MVC架构（本书5.4内容）

 `注意:`  将所有业务逻辑一股脑放到控制器听起来挺不错，但是控制器更适合承担的角色其实是负责对 HTTP 请求进行路由，因为还有很多其他访问应用的方式，
如 Artisan 命令、队列、调度任务等，控制器并非唯一入口，所以不适合也不应该将所有业务逻辑封装于此，过度依赖控制器会对以后应用的扩展带来麻烦。
因此，你应该具备这样的意识：控制器的主要职责就是获取 HTTP 请求，进行一些简单处理（如验证）后将其传递给真正处理业务逻辑的职能部门，如 Service。
当然对于非常简单的应用则并无大碍。

控制器文件位置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
控制器被存放在laravel框架中的 app/Http/Controllers 目录下。

值得注意的是，在定义控制器路由时，我们不需要指定完整的控制器命名空间。因为 RouteServiceProvider 会在一个包含命名空间的路由器组中加载路由文件，所以我们只需要指定类名中 App\Http\Controllers 命名空间之后的部分就可以了。

如果你选择将控制器存放在 App\Http\Controllers 目录下的某一目录，只需要简单地使用相对于 App\Http\Controllers 根命名空间的特定类名。

如何创建控制器
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

