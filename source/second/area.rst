作用域
============================================

作用域的基本概念
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
作用域是跟变量挂钩的概念，实际上就是指变量的范围，即它的生效范围或者说是变量能够被访问到的区域。

PHP变量及其作用域
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.  **全局作用域**
   
所有在函数外部定义的变量，拥有全局作用域。除了函数外，全局变量可以被脚本中的任何部分访问，要在一个函数中访问一个全局变量，需要使用 **global** 关键字。

2.  **局部作用域**

函数内部定义的变量,只能在函数内部使用

3.  **static作用域**

PHP 当一个函数完成时，它的所有变量通常都会被删除。为了有些局部变量不被删除，可以在第一次声明变量的时候使用 **static** 关键字

.. code-block:: PHP
    :linenos:
    
    <?php
    function Test()
    {
            static $x=0;  //利用static关键字定义静态变量
            $y = 0;       //局部变量
            $x++;     
            $y++;
            echo "x=$x";  
            echo "y=$y";
    }
    Test();       // x=1 ; y=1
    Test();       // x=2 ; y=1
    Test();       // x=3 ; y=1

4.  **参数作用域** 

参数是通过调用代码将值传递给函数的局部变量。参数是在参数列表中声明的，作为函数声明的一部分

.. code-block:: PHP
    :linenos:
    
    <?php
    function Test($parameter)
    {
         echo "parameter = $parameter";
    }
    Test(5);           //输出parameter=5

global 关键字 和 $GLOBALS[index]数组
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**global** 关键字用于函数内访问全局变量。

.. code-block:: PHP
    :linenos:
    
    <?php
    $x = 50;            //定义全局变量
    function Test()
    {
            global $x;  //利用glbal关键字在函数内部引用全局变量
            $y = 100;   //局部变量
            $y = $y - $x;
    }
    Test();
    echo $y;

PHP 将所有全局变量存储在一个名为 **$GLOBALS[index]** 的数组中。index保存变量的名称，这个数组可以在函数内部访问，也可以直接用来更新全局变量。

.. code-block:: PHP
    :linenos:
    
    <?php
    $x = 50 , $y= 25;           //定义全局变量
    function Test()
    {
      $GLOBALS['y'] = $GLOBALS['x'] / $GLOBALS['y'] ; //利用GLOBALS数组引用全局变量
    }
    Test();
    echo $y;
    >  

    
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~